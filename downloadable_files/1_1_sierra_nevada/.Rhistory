setwd("/Users/fjbonet_trabajo/Google_Drive/4_docencia/actos_docentes/practica_mapa_biodiversidad/preparacion/casos_estudio/1_montanias/sierra_nevada")
## Carga paquetes que necesitamos
library(rgdal)
#library(raster)
#library(sp)
library(sqldf)
## Importa la capa con las ocurrencias de GBIF
ocurrencias<-readOGR(dsn=".", layer="ocurrencias_GIB_sierra_nevada_23030", verbose = FALSE)
## Importa la capa con la malla de 250 m
grid250<-readOGR(dsn=".",layer="grid_snev_250", verbose = FALSE)
## Uni?n espacial: asigna a cada punto el c?digo de la cuadr?cula en la que se encuentra.
ocurrencias$id_250 <- over(ocurrencias, grid250)$id
## Extraer la "tabla de atributos" para hacer los c?lculos del ?ndice de Shannon
bio<-ocurrencias@data
bio_250 <- sqldf("SELECT * FROM bio WHERE id_250 is not null")
### Seleccionar las cuadr?culas en las que haya alguna especie
bio_250 <- sqldf("SELECT * FROM bio_250 WHERE scientific is not null")
### Calcular el n?mero de individuos por especie y por cuadr?cula (num_ind_sp_cuad)
Pi_250<-sqldf("SELECT id_250, scientific,  count(scientific) num_ind_sp_cuad  FROM bio_250 GROUP BY id_250, scientific")
### Calcular el n?mero total de individuos por cuadr?cula.
num_ind_cuad<-sqldf("SELECT id_250, sum(num_ind_sp_cuad) num_ind_cuad FROM Pi_250 GROUP BY id_250")
### Fusionar las tablas anteriores para calcular Pi
Pi_250<-sqldf("SELECT id_250, scientific, num_ind_sp_cuad, num_ind_cuad FROM Pi_250 LEFT JOIN num_ind_cuad USING(id_250)")
### Calcular pi por especie y por cuadr?cula.
Pi_250<-sqldf("SELECT id_250, scientific, num_ind_sp_cuad, num_ind_cuad, (num_ind_sp_cuad*1.0/num_ind_cuad) pi FROM Pi_250")
### Calcular el ln pi por especie y por cuadr?cula (log = ln). Log2(pi)=log(pi)/log(2)
Pi_250<-sqldf("SELECT id_250, scientific, num_ind_sp_cuad, num_ind_cuad, pi, (log(pi)/log(2))*pi lnpi_pi FROM Pi_250")
### Calcular H por cuadr?cula
Pi_250<-sqldf("SELECT id_250, sum(lnpi_pi)*-1 H FROM Pi_250 GROUP BY id_250")
## Fusionar la tabla que tiene el ?ndice de Shannon con la malla de cuadr?culas.
grid250<-merge(x = grid250, y = Pi_250, by.x = "id", by.y = "id_250", all.x = TRUE)
## Exportar la capa resultante a un shapefile.
writeOGR(grid250, dsn=".", layer="H_index_250_sierra_nevada", driver="ESRI Shapefile", overwrite=TRUE )
## Exportar la capa resultante a un shapefile.
writeOGR(grid250, dsn=".", layer="Shannon_250_sierra_nevada", driver="ESRI Shapefile", overwrite=TRUE )
## Extraer la "tabla de atributos" para hacer los c?lculos del ?ndice de Shannon
bio<-ocurrencias@data
### Calcular el n?mero de individuos por especie y por cuadr?cula (num_ind_sp_cuad)
Pi_250<-sqldf("SELECT id_250, scientific,  count(scientific) num_ind_sp_cuad  FROM bio_250 GROUP BY id_250, scientific")
### Calcular el n?mero total de individuos por cuadr?cula.
num_ind_cuad<-sqldf("SELECT id_250, sum(num_ind_sp_cuad) num_ind_cuad FROM Pi_250 GROUP BY id_250")
### Fusionar las tablas anteriores para calcular Pi
Pi_250<-sqldf("SELECT id_250, scientific, num_ind_sp_cuad, num_ind_cuad FROM Pi_250 LEFT JOIN num_ind_cuad USING(id_250)")
### Calcular pi por especie y por cuadr?cula.
Pi_250<-sqldf("SELECT id_250, scientific, num_ind_sp_cuad, num_ind_cuad, (num_ind_sp_cuad*1.0/num_ind_cuad) pi FROM Pi_250")
### Calcular el ln pi por especie y por cuadr?cula (log = ln). Log2(pi)=log(pi)/log(2)
Pi_250<-sqldf("SELECT id_250, scientific, num_ind_sp_cuad, num_ind_cuad, pi, (log(pi)/log(2))*pi lnpi_pi FROM Pi_250")
### Calcular H por cuadr?cula
Pi_250<-sqldf("SELECT id_250, sum(lnpi_pi)*-1 H FROM Pi_250 GROUP BY id_250")
## Fusionar la tabla que tiene el ?ndice de Shannon con la malla de cuadr?culas.
grid250<-merge(x = grid250, y = Pi_250, by.x = "id", by.y = "id_250", all.x = TRUE)
## Exportar la capa resultante a un shapefile.
writeOGR(grid250, dsn=".", layer="Shannon_250_sierra_nevada", driver="ESRI Shapefile", overwrite=TRUE )
### Calcular el n?mero de individuos por especie y por cuadr?cula (num_ind_sp_cuad)
Pi_250<-sqldf("SELECT id_250, scientific,  count(scientific) num_ind_sp_cuad  FROM bio GROUP BY id_250, scientific")
### Calcular el n?mero de individuos por especie y por cuadr?cula (num_ind_sp_cuad)
num_ind_sp_cuad<-sqldf("SELECT id_250, scientific,  count(scientific) num_ind_sp_cuad  FROM bio GROUP BY id_250, scientific")
### Calcular el n?mero total de individuos por cuadr?cula.
num_ind_cuad<-sqldf("SELECT id_250, sum(num_ind_sp_cuad) num_ind_cuad FROM num_ind_sp_cuad GROUP BY id_250")
### Calcular el n?mero de individuos por especie y por cuadr?cula (num_ind_sp_cuad)
T_num_ind_sp_cuad<-sqldf("SELECT id_250, scientific,  count(scientific) num_ind_sp_cuad  FROM bio GROUP BY id_250, scientific")
### Calcular el n?mero total de individuos por cuadr?cula.
T_num_ind_cuad<-sqldf("SELECT id_250, sum(num_ind_sp_cuad) num_ind_cuad FROM T_num_ind_sp_cuad GROUP BY id_250")
### Fusionar las tablas anteriores para calcular Pi
T_num_ind_sp_cuad_mas_num_ind_cuad<-sqldf("SELECT id_250, scientific, num_ind_sp_cuad, num_ind_cuad FROM T_num_ind_sp_cuad LEFT JOIN T_num_ind_cuad USING(id_250)")
### Calcular pi por especie y por cuadr?cula.
T_num_ind_sp_cuad_mas_num_ind_cuad<-sqldf("SELECT id_250, scientific, num_ind_sp_cuad, num_ind_cuad, (num_ind_sp_cuad*1.0/num_ind_cuad) pi FROM T_num_ind_sp_cuad_mas_num_ind_cuad")
### Calcular el ln pi por especie y por cuadr?cula (log = ln). Log2(pi)=log(pi)/log(2)
T_num_ind_sp_cuad_mas_num_ind_cuad<-sqldf("SELECT id_250, scientific, num_ind_sp_cuad, num_ind_cuad, pi, (log(pi)/log(2))*pi lnpi_pi FROM T_num_ind_sp_cuad_mas_num_ind_cuad")
### Calcular H por cuadr?cula
T_Shannon<-sqldf("SELECT id_250, sum(lnpi_pi)*-1 H FROM T_num_ind_sp_cuad_mas_num_ind_cuad GROUP BY id_250")
## Fusionar la tabla que tiene el ?ndice de Shannon con la malla de cuadr?culas.
grid250<-merge(x = grid250, y = T_num_ind_sp_cuad_mas_num_ind_cuad, by.x = "id", by.y = "id_250", all.x = TRUE)
setwd("/Users/fjbonet_trabajo/Google_Drive/4_docencia/actos_docentes/practica_mapa_biodiversidad/preparacion/casos_estudio/1_montanias/sierra_nevada")
## Carga paquetes que necesitamos
library(rgdal)
#library(raster)
#library(sp)
library(sqldf)
## Importa la capa con las ocurrencias de GBIF
ocurrencias<-readOGR(dsn=".", layer="ocurrencias_GIB_sierra_nevada_23030", verbose = FALSE)
## Importa la capa con la malla de 250 m
grid250<-readOGR(dsn=".",layer="grid_snev_250", verbose = FALSE)
## Uni?n espacial: asigna a cada punto el c?digo de la cuadr?cula en la que se encuentra.
ocurrencias$id_250 <- over(ocurrencias, grid250)$id
## Extraer la "tabla de atributos" para hacer los c?lculos del ?ndice de Shannon
bio<-ocurrencias@data
### Calcular el n?mero de individuos por especie y por cuadr?cula (num_ind_sp_cuad)
T_num_ind_sp_cuad<-sqldf("SELECT id_250, scientific,  count(scientific) num_ind_sp_cuad  FROM bio GROUP BY id_250, scientific")
### Calcular el n?mero total de individuos por cuadr?cula.
T_num_ind_cuad<-sqldf("SELECT id_250, sum(num_ind_sp_cuad) num_ind_cuad FROM T_num_ind_sp_cuad GROUP BY id_250")
### Fusionar las tablas anteriores para calcular Pi
T_num_ind_sp_cuad_mas_num_ind_cuad<-sqldf("SELECT id_250, scientific, num_ind_sp_cuad, num_ind_cuad FROM T_num_ind_sp_cuad LEFT JOIN T_num_ind_cuad USING(id_250)")
### Calcular pi por especie y por cuadr?cula.
T_num_ind_sp_cuad_mas_num_ind_cuad<-sqldf("SELECT id_250, scientific, num_ind_sp_cuad, num_ind_cuad, (num_ind_sp_cuad*1.0/num_ind_cuad) pi FROM T_num_ind_sp_cuad_mas_num_ind_cuad")
### Calcular el ln pi por especie y por cuadr?cula (log = ln). Log2(pi)=log(pi)/log(2)
T_num_ind_sp_cuad_mas_num_ind_cuad<-sqldf("SELECT id_250, scientific, num_ind_sp_cuad, num_ind_cuad, pi, (log(pi)/log(2))*pi lnpi_pi FROM T_num_ind_sp_cuad_mas_num_ind_cuad")
### Calcular H por cuadr?cula
T_Shannon<-sqldf("SELECT id_250, sum(lnpi_pi)*-1 H FROM T_num_ind_sp_cuad_mas_num_ind_cuad GROUP BY id_250")
## Fusionar la tabla que tiene el ?ndice de Shannon con la malla de cuadr?culas.
grid250<-merge(x = grid250, y = T_num_ind_sp_cuad_mas_num_ind_cuad, by.x = "id", by.y = "id_250", all.x = TRUE)
View(T_num_ind_sp_cuad_mas_num_ind_cuad)
View(grid250)
View(T_num_ind_sp_cuad)
View(ocurrencias)
View(ocurrencias@data)
View(bio)
View(T_num_ind_sp_cuad)
View(T_num_ind_cuad)
View(T_num_ind_sp_cuad_mas_num_ind_cuad)
View(T_Shannon)
View(grid250)
## Fusionar la tabla que tiene el ?ndice de Shannon con la malla de cuadr?culas.
grid250k<-merge(x = grid250, y = T_num_ind_sp_cuad_mas_num_ind_cuad, by.x = "id", by.y = "id_250", all.x = TRUE)
## Fusionar la tabla que tiene el ?ndice de Shannon con la malla de cuadr?culas.
grid250<-merge(x = grid250, y = T_num_ind_sp_cuad_mas_num_ind_cuad, by.x = "id", by.y = "id_250", all.x = FALSE)
## Fusionar la tabla que tiene el ?ndice de Shannon con la malla de cuadr?culas.
grid250<-merge(x = grid250, y = T_num_ind_sp_cuad_mas_num_ind_cuad, by.x = "id", by.y = "id_250")
## Fusionar la tabla que tiene el ?ndice de Shannon con la malla de cuadr?culas.
grid250<-merge(x = grid250, y = T_num_ind_sp_cuad_mas_num_ind_cuad, by.x = "id", by.y = "id_250", all.x = FALSE, all.y= FALSE)
## Fusionar la tabla que tiene el ?ndice de Shannon con la malla de cuadr?culas.
grid250<-merge(x = grid250, y = T_num_ind_sp_cuad_mas_num_ind_cuad, by.x = "id", by.y = "id_250", all.x = TRUE, all.y= FALSE)
## Fusionar la tabla que tiene el ?ndice de Shannon con la malla de cuadr?culas.
grid250<-merge(x = grid250, y = T_num_ind_sp_cuad_mas_num_ind_cuad, by.x = "id", by.y = "id_250", all.x = TRUE, all.y= TRUE)
## Fusionar la tabla que tiene el ?ndice de Shannon con la malla de cuadr?culas.
grid250<-merge(x = grid250, y = T_num_ind_sp_cuad_mas_num_ind_cuad, by.x = "id", by.y = "id_250")
View(grid250)
## Importa la capa con la malla de 250 m
grid250<-readOGR(dsn=".",layer="grid_snev_250", verbose = FALSE)
## Fusionar la tabla que tiene el ?ndice de Shannon con la malla de cuadr?culas.
grid250<-merge(x = grid250, y = T_num_ind_sp_cuad_mas_num_ind_cuad, by.x = "id", by.y = "id_250")
## Fusionar la tabla que tiene el ?ndice de Shannon con la malla de cuadr?culas.
grid250<-merge(x = grid250, y = T_num_ind_sp_cuad_mas_num_ind_cuad, by.x = "id", by.y = "id_250", duplicateGeoms = TRUE)
View(grid250)
View(grid250)
## Fusionar la tabla que tiene el ?ndice de Shannon con la malla de cuadr?culas.
grid250<-merge(x = grid250, y = T_Shannon, by.x = "id", by.y = "id_250")
View(grid250)
## Importa la capa con la malla de 250 m
grid250<-readOGR(dsn=".",layer="grid_snev_250", verbose = FALSE)
## Fusionar la tabla que tiene el ?ndice de Shannon con la malla de cuadr?culas.
grid250<-merge(x = grid250, y = T_Shannon, by.x = "id", by.y = "id_250")
## Exportar la capa resultante a un shapefile.
writeOGR(grid250, dsn=".", layer="Shannon_250_sierra_nevada", driver="ESRI Shapefile", overwrite=TRUE )
# Este script calcula el ?ndice Shannon de Sierra Nevada
#a una escala de 250 m usando la información existente en GBIF
## Establece directorio de trabajo
setwd("W:/Documents/shannon")
setwd("/Users/fjbonet_trabajo/Google_Drive/4_docencia/actos_docentes/practica_mapa_biodiversidad/preparacion/casos_estudio/1_montanias/sierra_nevada")
## Carga paquetes que necesitamos
library(rgdal)
#install.packages("sqldf")
#library(raster)
#library(sp)
library(sqldf)
## Importa la capa con las ocurrencias de GBIF
ocurrencias<-readOGR(dsn=".", layer="ocurrencias_sierra_nevada_23030", verbose = FALSE)
## Importa la capa con la malla de 250 m
grid250<-readOGR(dsn=".",layer="grid_snev_250", verbose = FALSE)
## Uni?n espacial: asigna a cada punto el c?digo de la cuadr?cula en la que se encuentra.
ocurrencias$id_250 <- over(ocurrencias, grid250)$id
## Extraer la "tabla de atributos" para hacer los c?lculos del ?ndice de Shannon
bio<-ocurrencias@data
## Calcular el ?ndice de Shannon
### Calcular el n?mero de individuos por especie y por cuadr?cula (num_ind_sp_cuad)
T_num_ind_sp_cuad<-sqldf("SELECT id_250, scientific,  count(scientific) num_ind_sp_cuad  FROM bio GROUP BY id_250, scientific")
### Calcular el n?mero total de individuos por cuadr?cula.
T_num_ind_cuad<-sqldf("SELECT id_250, sum(num_ind_sp_cuad) num_ind_cuad FROM T_num_ind_sp_cuad GROUP BY id_250")
### Fusionar las tablas anteriores para calcular Pi
T_num_ind_sp_cuad_mas_num_ind_cuad<-sqldf("SELECT id_250, scientific, num_ind_sp_cuad, num_ind_cuad FROM T_num_ind_sp_cuad LEFT JOIN T_num_ind_cuad USING(id_250)")
### Calcular pi por especie y por cuadr?cula.
T_num_ind_sp_cuad_mas_num_ind_cuad<-sqldf("SELECT id_250, scientific, num_ind_sp_cuad, num_ind_cuad, (num_ind_sp_cuad*1.0/num_ind_cuad) pi FROM T_num_ind_sp_cuad_mas_num_ind_cuad")
### Calcular el log2 pi por especie y por cuadr?cula (log = ln). Log2(pi)=log(pi)/log(2)
T_num_ind_sp_cuad_mas_num_ind_cuad<-sqldf("SELECT id_250, scientific, num_ind_sp_cuad, num_ind_cuad, pi, (log(pi)/log(2))*pi lnpi_pi FROM T_num_ind_sp_cuad_mas_num_ind_cuad")
### Calcular H por cuadr?cula
T_Shannon<-sqldf("SELECT id_250, sum(lnpi_pi)*-1 H FROM T_num_ind_sp_cuad_mas_num_ind_cuad GROUP BY id_250")
## Fusionar la tabla que tiene el ?ndice de Shannon con la malla de cuadr?culas.
grid250<-merge(x = grid250, y = T_Shannon, by.x = "id", by.y = "id_250")
## Exportar la capa resultante a un shapefile.
writeOGR(grid250, dsn=".", layer="Shannon_250_sierra_nevada", driver="ESRI Shapefile", overwrite=TRUE )
# Este script calcula el ?ndice Shannon de Sierra Nevada
#a una escala de 250 m usando la información existente en GBIF
## Establece directorio de trabajo
setwd("W:/Documents/shannon")
setwd("/Users/fjbonet_trabajo/Google_Drive/4_docencia/actos_docentes/practica_mapa_biodiversidad/preparacion/casos_estudio/1_montanias/sierra_nevada")
## Carga paquetes que necesitamos
library(rgdal)
#install.packages("sqldf")
#library(raster)
#library(sp)
library(sqldf)
## Importa la capa con las ocurrencias de GBIF
ocurrencias<-readOGR(dsn=".", layer="ocurrencias_sierra_nevada_23030", verbose = FALSE)
## Importa la capa con la malla de 250 m
grid250<-readOGR(dsn=".",layer="grid_snev_250", verbose = FALSE)
## Uni?n espacial: asigna a cada punto el c?digo de la cuadr?cula en la que se encuentra.
ocurrencias$id_250 <- over(ocurrencias, grid250)$id
## Extraer la "tabla de atributos" para hacer los c?lculos del ?ndice de Shannon
bio<-ocurrencias@data
## Calcular el ?ndice de Shannon
### Calcular el n?mero de individuos por especie y por cuadr?cula (num_ind_sp_cuad)
T_num_ind_sp_cuad<-sqldf("SELECT id_250, scientific,  count(scientific) num_ind_sp_cuad  FROM bio GROUP BY id_250, scientific")
### Calcular el n?mero total de individuos por cuadr?cula.
T_num_ind_cuad<-sqldf("SELECT id_250, sum(num_ind_sp_cuad) num_ind_cuad FROM T_num_ind_sp_cuad GROUP BY id_250")
### Fusionar las tablas anteriores para calcular Pi
T_num_ind_sp_cuad_mas_num_ind_cuad<-sqldf("SELECT id_250, scientific, num_ind_sp_cuad, num_ind_cuad FROM T_num_ind_sp_cuad LEFT JOIN T_num_ind_cuad USING(id_250)")
### Calcular pi por especie y por cuadr?cula.
T_num_ind_sp_cuad_mas_num_ind_cuad<-sqldf("SELECT id_250, scientific, num_ind_sp_cuad, num_ind_cuad, (num_ind_sp_cuad*1.0/num_ind_cuad) pi FROM T_num_ind_sp_cuad_mas_num_ind_cuad")
### Calcular el log2 pi por especie y por cuadr?cula (log = ln). Log2(pi)=log(pi)/log(2)
T_num_ind_sp_cuad_mas_num_ind_cuad<-sqldf("SELECT id_250, scientific, num_ind_sp_cuad, num_ind_cuad, pi, (log(pi)/log(2))*pi lnpi_pi FROM T_num_ind_sp_cuad_mas_num_ind_cuad")
### Calcular H por cuadr?cula
T_Shannon<-sqldf("SELECT id_250, sum(lnpi_pi)*-1 H FROM T_num_ind_sp_cuad_mas_num_ind_cuad GROUP BY id_250")
## Fusionar la tabla que tiene el ?ndice de Shannon con la malla de cuadr?culas.
grid250<-merge(x = grid250, y = T_Shannon, by.x = "id", by.y = "id_250")
## Exportar la capa resultante a un shapefile.
writeOGR(grid250, dsn=".", layer="Shannon_250_sierra_nevada", driver="ESRI Shapefile", overwrite=TRUE )
